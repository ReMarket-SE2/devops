name: Deploy to GKE

on:
  workflow_call:
  workflow_dispatch:


permissions:
  id-token: write

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Get GKE credentials
        id : 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ secrets.GOOGLE_PROJECT_ID}}-gke'
          location: ${{ secrets.GOOGLE_REGION }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash


      - name: Install repository
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add jetstack https://charts.jetstack.io
          helm repo update

      - name: Install Cert-Manager
        run: |
          helm upgrade \
            --install \
            cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --create-namespace \
            --version v1.17.0 \
            --set crds.enabled=true

      - name: Deploy
        run: |
          helm dependency build ./helm &&
          helm upgrade remarket ./helm \
            --install \
            --namespace remarket \
            --create-namespace \
            --set webapp.containers.env.google_client_id=${{ secrets.GOOGLE_CLIENT_ID }} \
            --set webapp.containers.env.google_client_secret=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            --set webapp.containers.env.jwt_secret=${{ secrets.JWT_SECRET }} \
            --set webapp.containers.env.secret=${{ secrets.SECRET }} \
            --set webapp.containers.env.next_public_app_url=${{ secrets.NEXT_PUBLIC_APP_URL }} \
            --set webapp.containers.env.nextauth_url=${{ secrets.NEXT_PUBLIC_APP_URL }} \
            --set webapp.containers.env.secret=${{ secrets.SECRET }} \
            --set webapp.containers.env.nextauth_secret=${{ secrets.NEXTAUTH_SECRET }} \
            --set database.container.env.POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            --set database.container.env.POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            --set database.container.env.POSTGRES_DB=${{ secrets.POSTGRES_DB }}
