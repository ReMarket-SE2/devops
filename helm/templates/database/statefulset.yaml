apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.database.name }}
  labels:
    app: {{ .Values.database.name }}
spec:
  serviceName: {{ .Values.database.name }}
  replicas: {{ .Values.database.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
    spec:
      containers:
        - name: {{ .Values.database.name }}
          image: "{{ .Values.database.container.image.name}}:{{ .Values.database.container.image.tag }}"
          ports:
            - containerPort: {{ .Values.database.container.port }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.database.container.env.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.database.container.env.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.database.container.env.POSTGRES_DB }}"
          volumeMounts:
            - name: init-script
              mountPath: "/docker-entrypoint-initdb.d"
              readOnly: true
            - name: storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: init-script
          configMap:
            name: db-init-scripts
            items:
            - key: "init-extensions.sql"
              path: "init-extensions.sql"
        - name: storage
          persistentVolumeClaim:
            claimName: "{{ .Values.database.name}}-storage"

  volumeClaimTemplates:
    - metadata:
        name: "{{ .Values.database.name}}-storage"
      spec:
        accessModes: {{ .Values.database.storage.accessModes }}
        resources:
          requests:
            storage: {{ .Values.database.storage.size }}
